import org.apache.spark.sql.SparkSession
import org.apache.spark.sql.types.StructType
import org.apache.spark.sql.types.StructField
import org.apache.spark.sql.types.StringType

object ImposingOwnSchema {
  def main(args: Array[String]): Unit = {
    val spark = SparkSession.builder()
    .master("local")
    .appName("Imposing Own Schema on a Data Frame")
    .getOrCreate()
    
    val valeursfoncieresDF = spark.read
    .option("header", "true")
    .option("inferSchema", "true")
    .option("delimiter", "|")
    .csv("src/test/resources/datasets/valeursfoncieres-2019.csv")
    
    valeursfoncieresDF.printSchema()
    
    val ownSchema = StructType(
        StructField("Code departement", StringType, true) ::
        StructField("Commune", StringType, true) ::
        StructField("Valeur fonciere", StringType, true) ::
        StructField("Type local", StringType, true) ::
        StructField("Identifiant local", StringType, true) :: Nil)
        
        val valeursfoncieresWithOwnSchema = spark.read
        .option("header", "true")
        .option("delimiter", "|")
        .schema(ownSchema)
        .csv("src/test/resources/datasets/valeursfoncieres-2019.csv")
        
        valeursfoncieresWithOwnSchema.printSchema()
        
  }
  
}
